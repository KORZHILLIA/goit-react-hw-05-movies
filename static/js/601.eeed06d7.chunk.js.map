{"version":3,"file":"static/js/601.eeed06d7.chunk.js","mappings":"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","sources":["components/MoviesSearchForm/MoviesSearchForm.jsx","shared/hooks/useSearchForm.js","pages/Movies/Movies.jsx","shared/services/moviesApi.js","shared/hooks/useMovies.js"],"sourcesContent":["import { useSearchForm } from '../../shared/hooks/useSearchForm';\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n  const [state, inputChangeHandler, transitQuery] = useSearchForm(\n    { query: '' },\n    onSubmit\n  );\n\n  const { query } = state;\n\n  return (\n    <form onSubmit={transitQuery}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        value={query}\n        onChange={inputChangeHandler}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default MoviesSearchForm;\n","import { useState } from 'react';\n\nexport const useSearchForm = (initialState, onSubmitFunction) => {\n  const [state, setState] = useState(initialState);\n\n  function inputChangeHandler({ target }) {\n    const { name, value, type, checked } = target;\n    const updatedValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({ ...prevState, [name]: updatedValue }));\n  }\n\n  function transitQuery(event) {\n    event.preventDefault();\n    onSubmitFunction({ ...state });\n    setState(initialState);\n  }\n\n  return [state, inputChangeHandler, transitQuery];\n};\n","import { useCallback } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useMovies } from 'shared/hooks/useMovies';\nimport MoviesSearchForm from 'components/MoviesSearchForm';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const [state] = useMovies(\n    { movies: [], loading: false, error: null },\n    query,\n    'searchMoviesByQuery'\n  );\n\n  const changeQuery = useCallback(\n    ({ query }) => setSearchParams({ query }),\n    [setSearchParams]\n  );\n\n  const { error, movies, loading } = state;\n  const links = movies.map(({ id, original_title }) => (\n    <li key={id}>\n      <Link to={`${id}`} state={{ from: location }}>\n        {original_title}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <>\n      <MoviesSearchForm onSubmit={changeQuery} />\n      {loading && <p>Loading</p>}\n      {error && <p>{error}</p>}\n      <ul>{links}</ul>\n    </>\n  );\n};\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f3ea85ad66a7076fbd3968a20cd79e45';\n\nconst params = new URLSearchParams({\n  api_key: KEY,\n  language: 'en-US',\n  page: 1,\n  include_adult: true,\n});\n\nasync function getTrendingMoviesForDay() {\n  const response = await fetch(`${BASE_URL}trending/movie/day?${params}`);\n  if (!response.ok) {\n    throw new Error('Something went wrong, try once again...');\n  }\n  const result = response.json();\n  return result;\n}\n\nfunction fetchDifferentMovieFeatures(id, feature) {\n  const finalFeature = feature ? `/${feature}` : '';\n  const requiredFunction = async () => {\n    const response = await fetch(\n      `${BASE_URL}movie/${id}${finalFeature}?api_key=${KEY}&language=en-US`\n    );\n    if (!response.ok) {\n      throw new Error('Something went wrong, try once again...');\n    }\n    const result = response.json();\n    return result;\n  };\n  return requiredFunction();\n}\n\nasync function fetchMoviesByQuery(query) {\n  const response = await fetch(\n    `${BASE_URL}search/movie?${params}&query=${query}`\n  );\n  if (!response.ok) {\n    throw new Error('You typed something wrong, please try again');\n  }\n  const result = response.json();\n  return result;\n}\nexport {\n  getTrendingMoviesForDay,\n  fetchDifferentMovieFeatures,\n  fetchMoviesByQuery,\n};\n","import { useState, useEffect } from 'react';\nimport {\n  fetchDifferentMovieFeatures,\n  fetchMoviesByQuery,\n  getTrendingMoviesForDay,\n} from '../services/moviesApi';\n\nlet requiredInfo = null;\n\nexport function useMovies(initialState, dependenceVar, fetchParameter) {\n  const [state, setState] = useState(initialState);\n  const firstStateKey = Object.keys(state)[0];\n\n  useEffect(() => {\n    if (dependenceVar === null) {\n      return;\n    }\n    const getInfoFunction = async () => {\n      try {\n        setState(prevState => ({ ...prevState, loading: true }));\n\n        if (fetchParameter === 'searchMoviesByQuery') {\n          requiredInfo = await fetchMoviesByQuery(dependenceVar);\n        } else if (fetchParameter === 'getTrendingMovies') {\n          requiredInfo = await getTrendingMoviesForDay();\n        } else {\n          requiredInfo = await fetchDifferentMovieFeatures(\n            dependenceVar,\n            fetchParameter\n          );\n        }\n        let finalResult = requiredInfo;\n        if (\n          fetchParameter === 'reviews' ||\n          fetchParameter === 'searchMoviesByQuery' ||\n          fetchParameter === 'getTrendingMovies'\n        ) {\n          const { results } = requiredInfo;\n          finalResult = results;\n        }\n        if (fetchParameter === 'credits') {\n          const { cast } = requiredInfo;\n          finalResult = cast;\n        }\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          [firstStateKey]: finalResult,\n        }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          error: error.message,\n        }));\n      }\n    };\n    getInfoFunction();\n  }, [firstStateKey, dependenceVar, fetchParameter]);\n\n  return [state];\n}\n"],"names":["initialState","onSubmitFunction","useState","state","setState","target","name","value","type","checked","updatedValue","prevState","event","preventDefault","useSearchForm","query","onSubmit","inputChangeHandler","transitQuery","onChange","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useMovies","movies","loading","error","changeQuery","useCallback","links","map","id","original_title","to","from","BASE_URL","KEY","params","URLSearchParams","api_key","language","page","include_adult","getTrendingMoviesForDay","fetch","response","ok","Error","result","json","fetchDifferentMovieFeatures","feature","finalFeature","requiredFunction","fetchMoviesByQuery","requiredInfo","dependenceVar","fetchParameter","firstStateKey","Object","keys","useEffect","getInfoFunction","finalResult","results","cast","message"],"sourceRoot":""}